Zope3 In 30 Minutes
===================


  Important Note: I assume you are using Debian 3.1 (Sarge) or similar systems.


Why 30?
-------

  Sorry! Zope3 cannot be introduced in 10 minutes.


And why should I ...?
---------------------

  If you are looking for a Pythonic framework for web application development,
just continue reading, I will answer your "why?" questions.


Keywords
--------

  Python, Zope, Interface, Component, ZCML, ZMI, Adapter, View, 
Event, Principal.


So lets start...
----------------

  Zope3 is the third generation of Zope (Z Object Publishing Environment), 
a framework for web application development.  You can download Zope3 from
http://www.zope.org/Products/Zope3 .  After installation (as root :
./configure;make;make install) you have to make an instance 
(don't worry! just do it).  To do so::

  $ cd /usr/local/Zope-3.1.0/bin
  $ ./mkzopeinstance --dir=$HOME/myzope --user=admin:secret123

To start Zope3 server, go to your instance directory, then::

  $ cd ~/myzope
  $ ./bin/runzope

  If you get a port error, check 8080 and 8021 is already used by other 
programs, for the time being, just stop it.  Open your browser 
http://localhost:8080 what you can see is the Zope Management Interface (ZMI).
ZMI is your Python prompt, hmm... no! Zope prompt.  You can login and look 
around to see what's happening.  If you played enough with ZMI, stop it 
from terminal (Control + C).


BookMarker : Your first Zope3 app
---------------------------------

  Yes! we are going to create a Zope3 application, an online book marker.
Our app will display links to websites and a description for each link.

  So, what you have to think about when you start a Zope3 project.
Oh! sorry! I cann't put it in one sentence, you better learn and 
practice Extreme Programming (http://en.wikipedia.org/ExtremeProgramming).
Anyway, after your initial design, you will write interfaces.
Let us hope Python 3.0 will make it much easier.  Then you will write
unit tests, see your ideas became very concrete.  Now you write your
real code, you will be satisfied when you implement interfaces one
by one and unit tests succeeds!. I have given the source code of
BookMarker here : http://download.berlios.de/zissue/boom.tar.bz2

Your code will be placed at $HOME/myzope/lib/python/boom

Ok, let's start with one container interface ::


